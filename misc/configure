module load python cuda; source $pyshtenv; cd pysht/c/

nvcc  -o assocLeg.so -shared -Xcompiler -fPIC assocLeg.cu

nvcc  -o pointing.so -shared -Xcompiler -fPIC pointing.cu

nvcc  -o pointing.so -shared -Xcompiler -fPIC pointing.cpp pointing.cu
nvcc  -o pysht/c/pointing.so -shared -Xcompiler -fPIC pysht/c/pointing.cpp pysht/c/pointing.cu

srun python3 -m notebook --port=1234 --ip=$hostname



# bind the c code to python

cmake -S . -B build
cmake --build build


to install shtns on the Rusty cluster,
export CUDA_PATH= to cuda without /lib or /bin
export LD_LIBRARY_PATH= must point to /lib64

python3 setup.py develop


to run profiling:
    add decorator @profile to the function
    run kernprof -l -v script.py
    to run the script with the profiler
    python -m cProfile -o output.pstats script.py
    to visualize the output
    snakeviz output.pstats
    or
    pyprof2calltree -i output.pstats -k
    

To profile this:
 1. `kernprof -l gclm2lenmap_GPU.py'`
 2. `python3 -m line_profiler -rmt "gclm2lenmap_GPU.py.lprof"