install cunusht on rusty and create a new environment:
first, set up new environment

module load python
module load cuda/12.1.1
module load jupyter-kernels

VENVDIR=~/venv
python -m venv --system-site-packages $VENVDIR/cunusht_gpu
source $VENVDIR/cunusht_gpu/bin/activate


pip install logdecorator pybind11 # and others that might be missing

go to ~/git and install
plancklens: python setup.py develop # possibly remove all fortran stuff from setup.py beforehand
lenspyx: python setup.py develop # go to tweak branch before
shtns from ~/gricad/shtns:
    export CUDA_PATH=/mnt/sw/nix/store/y8bggjg9wx71bpyhldmyq1cwvym9xa97-cuda-12.1.1
    ./configure --enable-openmp --enable-python
    make
    python3 setup.py install

cunusht:
    cd cunustht/c
    pip install .
    cd ../..
    python3 setup.py develop

ducc0:
    pip3 install --no-binary ducc0 ducc0


SHTns
-----------

to install SHTns on the rusty cluster, make sure you the following to variables, otherwise SHTns will 'install' but not have updated GPU routines (not sure why)
export LD_LIBRARY_PATH=/mnt/sw/nix/store/zi2wc26znf75csf5hhz77p0d2bbz53ih-cuda-11.8.0/lib64;$LD_LIBRARY_PATH


## Ygdrassil
Quickhelp to activate GPU on jupyter notebook in VS code

Activate conda environment, and load modules before starting kernel,

```
conda activate shtgpu
source load_modules
```

Allocate GPU,
```
salloc --gpus 1 --partition=shared-gpu --time=320:00
```

Run script for starting server,

```
./start_jupyter.sh
```

In VS Code, choose exsiting server with URL.
Finally, in notebook, choose shtgpu kernel.

To install shtns, activate gpu node, load compatible modules (CUDAcore needs gcc <=10, i.e: module load GCC/9.3.0)

There appears to be two shtgpu conda environs. One is on login node, the other is on gpu node. Install stuff into the gpu node version, as only there shtns and cufinufft installations succeed.


nvcc  -o assocLeg.so -shared -Xcompiler -fPIC assocLeg.cu
nvcc  -o cunusht/c/pointing.so -shared -Xcompiler -fPIC cunusht/c/pointing.cpp cunusht/c/pointing.cu

srun python3 -m notebook --port=1234 --ip=$hostname

# bind the c code to python
cmake -S . -B build
cmake --build build